plugins {
    id 'groovy'
    id 'java'
    id 'application'
    id "io.freefair.lombok" version "5.0.1"
}

group 'com.myproject.vendingmachine'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8

repositories {
    // Spock releases are available from Maven Central
    mavenCentral()
    // Spock snapshots are available from the Sonatype OSS snapshot repository
    maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
}


dependencies {
    implementation 'org.codehaus.groovy:groovy-all:3.0.8'
    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile (
        'org.codehaus.groovy:groovy-all:3.0.5',
        "org.spockframework:spock-core:2.0-groovy-3.0"
    )
    
    //add lombok libraries 
    compileOnly 'org.projectlombok:lombok:1.18.20'
    annotationProcessor 'org.projectlombok:lombok:1.18.20'
    testCompileOnly 'org.projectlombok:lombok:1.18.20'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.20'


    //add spock testing and groovy
    //juniper allows you to run both junit and spock
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.0'
    testRuntimeOnly 'org.junit.vintage:junit-vintage-engine:5.7.0'

    // mandatory dependencies for using Spock
    implementation "org.codehaus.groovy:groovy:3.0.8"
    testImplementation platform("org.spockframework:spock-bom:2.0-groovy-3.0")
    testImplementation "org.spockframework:spock-core"
    testImplementation "org.spockframework:spock-junit4"  // you can remove this if your code does not rely on old JUnit 4 rules

    // optional dependencies for using Spock
    testImplementation "org.hamcrest:hamcrest-core:2.2"   // only necessary if Hamcrest matchers are used
    testRuntimeOnly "net.bytebuddy:byte-buddy:1.11.0" // allows mocking of classes (in addition to interfaces)
    testRuntimeOnly "org.objenesis:objenesis:3.2"      // allows mocking of classes without default constructor (together with ByteBuddy or CGLIB)
}

application {
    mainClassName = 'MyProject'
}

test {
    useJUnitPlatform()
    testLogging {
        events = ["passed", "skipped", "failed"]

        // set options for log level DEBUG
        debug {
            events = ["started", "skipped", "failed"]
            exceptionFormat = "full"
        }

        // remove standard output/error logging from --info builds
        // by assigning only 'failed' and 'skipped' events
        info  {  events = ["failed", "skipped"] }
    }
}

sourceSets {
    main{
        groovy { srcDirs = [ 'src/main/groovy', 'src/main/java']}
        java { srcDirs = ['src/main/java', 'src/main/groovy']}
    }
    test{
        groovy { srcDirs = [ 'src/test/groovy', 'src/test/java']}
        java { srcDirs = ['src/test/java', 'src/test/groovy']}
    }
}



